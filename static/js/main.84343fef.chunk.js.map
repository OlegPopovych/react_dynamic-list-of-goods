{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","_ref","goods","_jsx","children","map","good","style","color","name","id","getAll","fetch","arguments","length","undefined","then","response","json","get5First","sort","a","b","localeCompare","splice","getRedGoods","filter","App","_useState","useState","_useState2","_slicedToArray","setGoods","_useState3","_useState4","loading","setLoading","_useState5","_useState6","errorMessage","setErrorMessage","loadTodos","_asyncToGenerator","_regeneratorRuntime","mark","_callee","func","todosFromServer","_args","wrap","_context","prev","next","sent","t0","message","finish","stop","apply","useEffect","_jsxs","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"4OAOaA,EAA6B,SAAHC,GAAA,IAAMC,EAAKD,EAALC,MAAK,OAChDC,cAAA,MAAAC,SACGF,EAAMG,KAAI,SAAAC,GAAI,OACbH,cAAA,MAEE,UAAQ,OACRI,MAAO,CAAEC,MAAOF,EAAKE,OAAQJ,SAE5BE,EAAKG,MAJDH,EAAKI,GAKP,KAEJ,ECbA,SAASC,IACd,OAAOC,MADiBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFb,yEAIRG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAM,GACrC,CAEO,IAAMC,EAAY,WACvB,OAAOR,IACJK,MAAK,SAAAd,GACJ,OAAOA,EACJkB,MAAK,SAACC,EAAGC,GACR,OAAOD,EAAEZ,KAAKc,cAAcD,EAAEb,KAChC,IACCe,OAAO,EAAG,EACf,GACJ,EAEaC,EAAc,WACzB,OAAOd,IACJK,MAAK,SAAAd,GACJ,OAAOA,EAAMwB,QAAO,SAAApB,GAAI,MAAmB,QAAfA,EAAKE,KAAe,GAClD,GACJ,ECjBamB,EAAgB,WAC3B,IAAAC,EAA0BC,mBAAiB,IAAGC,EAAAC,YAAAH,EAAA,GAAvC1B,EAAK4B,EAAA,GAAEE,EAAQF,EAAA,GACtBG,EAA8BJ,oBAAS,GAAMK,EAAAH,YAAAE,EAAA,GAAtCE,EAAOD,EAAA,GAAEE,EAAUF,EAAA,GAC1BG,EAAwCR,mBAAS,IAAGS,EAAAP,YAAAM,EAAA,GAA7CE,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAE9BG,EAAS,eAAAxC,EAAAyC,YAAAC,cAAAC,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAnC,UAAA,OAAA8B,cAAAM,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEC,OAFMN,EAAIE,EAAAlC,OAAA,QAAAC,IAAAiC,EAAA,GAAAA,EAAA,GAAGrC,EAC9B6B,EAAgB,IAChBJ,GAAW,GAAMc,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAGeN,IAAO,KAAD,EAA9BC,EAAeG,EAAAG,KAErBrB,EAASe,GAAiBG,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAI,GAAAJ,EAAA,SAE1BV,EAAgBU,EAAAI,GAAiBC,SAAS,QAExB,OAFwBL,EAAAC,KAAA,GAE1Cf,GAAW,GAAOc,EAAAM,OAAA,6BAAAN,EAAAO,OAAA,GAAAZ,EAAA,yBAErB,kBAbc,OAAA5C,EAAAyD,MAAA,KAAA7C,UAAA,KAmBf,OAJA8C,qBAAU,WACRlB,GACF,GAAG,IAGDmB,eAAA,OAAKC,UAAU,MAAKzD,SAAA,CAClBD,cAAA,MAAAC,SAAI,0BAEJD,cAAA,UACE2D,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMtB,EAAU9B,EAAO,EAACP,SAClC,mBAIDD,cAAA,UACE2D,KAAK,SACLC,QAAS,kBAAMtB,EAAUtB,EAAU,EACnC,UAAQ,oBAAmBf,SAC5B,uBAIDD,cAAA,UACE2D,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMtB,EAAUhB,EAAY,EAACrB,SACvC,mBAIA+B,GACIhC,cAAA,OAAK0D,UAAU,MAAKzD,SAAC,YACzBmC,IAAiBJ,GACbhC,cAAA,OAAK0D,UAAU,MAAKzD,SAAEmC,IAE3BpC,cAACH,EAAS,CAACE,MAAOA,MAGxB,EClEA8D,IAASC,OACP9D,cAACwB,EAAG,IACJuC,SAASC,eAAe,Q","file":"static/js/main.84343fef.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => (\n      <li\n        key={good.id}\n        data-cy=\"good\"\n        style={{ color: good.color }}\n      >\n        {good.name}\n      </li>\n    ))}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(url = API_URL): Promise<Good[]> {\n  return fetch(url)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => {\n      return goods\n        .sort((a, b) => {\n          return a.name.localeCompare(b.name);\n        })\n        .splice(0, 5);\n    }); // sort and get the first 5\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => {\n      return goods.filter(good => good.color === 'red');\n    }); // get only red\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { Good } from './types/Good';\n// or\n// import * as goodsAPI from './api/goods';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const loadTodos = async (func = getAll) => {\n    setErrorMessage('');\n    setLoading(true);\n\n    try {\n      const todosFromServer = await func();\n\n      setGoods(todosFromServer);\n    } catch (error) {\n      setErrorMessage((error as Error).message);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    loadTodos();\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => loadTodos(getAll)}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => loadTodos(get5First)}\n        data-cy=\"first-five-button\"\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => loadTodos(getRedGoods)}\n      >\n        Load red goods\n      </button>\n\n      {loading\n        && <div className=\"div\">loading</div>}\n      {errorMessage && !loading\n        && <div className=\"div\">{errorMessage}</div>}\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}